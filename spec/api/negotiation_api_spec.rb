=begin
#BBCE Bus API

#Endpoint's specifications for routes allowed for direct client usage.

OpenAPI spec version: 1.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for BbceApi::NegotiationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'NegotiationApi' do
  before do
    # run before each test
    @instance = BbceApi::NegotiationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NegotiationApi' do
    it 'should create an instance of NegotiationApi' do
      expect(@instance).to be_instance_of(BbceApi::NegotiationApi)
    end
  end

  # unit tests for get_ticker_by_id
  # Get Ticker by Identification
  # Get Ticker by Identification
  # @param ticker_id Ticker identifier number.   Parameter **id** that was received in the response object of **/v2/tickers** in Negotiation API
  # @param [Hash] opts the optional parameters
  # @return [Ticker]
  describe 'get_ticker_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ticker_by_id_v2
  # Get Ticker by Identification
  # Get Ticker by Identification
  # @param ticker_id Ticker identifier number.   Parameter **id** that was received in the response object of **/v2/tickers** in Negotiation API
  # @param [Hash] opts the optional parameters
  # @return [TickerById]
  describe 'get_ticker_by_id_v2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_negotiable_tickers
  # Lists the tickers that the trader can operate
  # Lists tickers that trader is able to operate. The list is determined by company&#x27;s wallet and trader&#x27;s permissions
  # @param wallet_id Wallet identifier number.   Parameter **id** that was received in the response object of **/v1/wallets** in Wallets API
  # @param [Hash] opts the optional parameters
  # @return [Array<NegotiableTicker>]
  describe 'list_negotiable_tickers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tickers
  # List tickers
  # List all tickers regardless of whether it&#x27;s in the company&#x27;s wallet or user&#x27;s permissions. You can filter by status or description
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Pagination (by default search for all elements)
  # @option opts [Integer] :items_per_page Number of items per page (default 10)
  # @option opts [BOOLEAN] :status Filter the tickers by status value
  # @option opts [String] :description Filter the tickers by description value
  # @return [Array<Ticker>]
  describe 'list_tickers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tickers_v2
  # List tickers
  # Lists all tickers regardless of whether it&#x27;s in the company&#x27;s wallet or user&#x27;s permissions. You can filter by status or description
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Pagination (by default search for all elements)
  # @option opts [Integer] :items_per_page Number of items per page (default 10)
  # @option opts [BOOLEAN] :status Filter the tickers by status value
  # @option opts [String] :description Filter the tickers by description value
  # @return [Array<Ticker>]
  describe 'list_tickers_v2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
